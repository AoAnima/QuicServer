package DataBase

import (
	badger "github.com/dgraph-io/badger/v4"
	"github.com/google/uuid"
)

type Документ struct {
	// поле Name типа string
	КодДокумента  КодДокумента  // используется для создания не уникального индекса добавляется в конце индексного пути например таблица.адрес.город:Ставропль|КодДокумента в качестве занчения используется ПервичныйКлюч
	ПервичныйКлюч ПервичныйКлюч // путь к значению в документе которое используется для генерации ключа документа : имяТаблицы.первичныйКлюч:значение
	Данные
}

type ПервичныйКлюч string

type Данные map[string]interface{}

// type Данные interface{}

type КодДокумента string

func (д *Документ) КодЗаписи() КодДокумента {
	if д.КодДокумента == "" {
		д.КодДокумента = КодДокумента(uuid.New().String())
	}
	return д.КодДокумента
}

const (
	изменить = 0 == 0 // Untyped bool.
	читать   = 0 != 0 // Untyped bool.
)

type База struct {
	*badger.DB
}

type Транзакция struct {
	*badger.Txn
}

type ОшибкаБазы struct {
	Ключ     string
	Индекс   string
	Значение []byte
	Текст    string
	Код      int
}

const (
	Ок = iota
	ОшибкаДубликатКлюча
	ОшибкаДубликатИндекса
	ОшибкаКлючНеНайден
	ОшибкаСоединениеЗакрыто
	ОшибкаФиксацииТранзакции
	ОшибкаЗаписи
	ОшибкаПодключения
	ОшибкаПреобразованияДокумента
	ИндексыСуществуют
)
