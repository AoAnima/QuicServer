package DataBase

// import (
// 	"time"

// 	. "aoanima.ru/Logger"
// )

// type ДопполнительныеИндексы struct {
// 	УникальныеИндексы []string
// 	Индексы           []string
// }

// /*
// поля обязатльные:
// ключ - ключ для документа
// объект - документ для вставки
// поля не обязательные:

// 	ДопполнительныеИндексы struct {
// 		УникальныеИндексы []string
// 		Индексы []string
// 	} - если нужно проиндексировать документ каким то особы индексом котоый не был создат в момент создания таблицы то можно передать дополнительные индексы
// */
// func (т *Таблица) ВставитьДокумент(ключ string, объект map[string]interface{}, индексы ДопполнительныеИндексы) ОшибкаБазы {

// 	// КоддЗаписи := КодЗаписи(таблица + ":" + ключ)

// 	объект["КодЗаписи"] = КодЗаписи()
// 	var УникальныеИндексы map[string]string
// 	if индексы.УникальныеИндексы != nil {
// 		УникальныеИндексы = make(map[string]string)
// 		УникальныеИндексы, _ = СоздатьКлючиИндекса(объект, индексы.УникальныеИндексы)
// 	}

// 	т.ПолучитьСигнатуруТаблицы()

// 	ошибка := т.база.Транзакция(изменить, func(трз *Транзакция) ОшибкаБазы {
// 		старт := time.Now()
// 		//провряет существование уникального ключа и исключения дубля первиного ключа для документа
// 		ok, ОшибкаДубльКлюча := трз.УникальныйКлюч(т.Имя, ключ, УникальныеИндексы)
// 		времяРаботы := time.Since(старт)
// 		Инфо("Время поиска ключа и индекса  %+v \n", времяРаботы)

// 		if !ok {
// 			Ошибка(" ОшибкаДубльКлюча %+v \n", ОшибкаДубльКлюча)
// 			return ОшибкаДубльКлюча
// 		}

// 		Объект, err := Json(объект)
// 		if err != nil {
// 			Ошибка("  %+v \n", err)
// 		}

// 		КлючОбъекта := таблица.Имя + ":" + ключ

// 		if err := трз.Set([]byte(КлючОбъекта), Объект); err != nil {
// 			return ОшибкаБазы{
// 				Текст: err.Error(),
// 				Код:   ОшибкаЗаписи,
// 			}
// 		}

// 		//  Получается при каждой вставке  будем проверять таблицу индексов, есть, нету и обновлять... накладно, нужно вынести проверку в отдельную функцию
// 		неУникальныеИндексы, _ := СоздатьКлючиИндекса(объект, индексы)
// 		ошибкаЗаписиИндекса := трз.ВставитьИндекс(таблица, КлючОбъекта, УникальныеИндексы, неУникальныеИндексы, объект["КодЗаписи"].(string))
// 		Инфо(" ошибкаЗаписиИндекса %+v \n", ошибкаЗаписиИндекса)
// 		return ошибкаЗаписиИндекса
// 	})
// 	if ошибка.Код != 0 {
// 		Ошибка("  %+v \n", ошибка)
// 	}
// 	return ошибка
// }
