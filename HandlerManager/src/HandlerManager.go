package main

import (
	"sync"

	. "aoanima.ru/ConnQuic"
	. "aoanima.ru/Logger"
	. "aoanima.ru/QErrors"
	"github.com/quic-go/quic-go"
)

type Конфигурация struct{}

var Сервис ИмяСервиса = "Менеджер обработчиков"

// var каталогСтатичныхФайлов string
var Конфиг = &Конфигурация{}

func init() {
	Инфо(" проверяем какие аргументы переданы при запуске, если пусто то читаем конфиг, если конфига нет то устанавливаем значения по умолчанию %+v \n")

	// каталогСтатичныхФайлов = "../../HTML/static/"
	ЧитатьКонфиг(Конфиг)
}

var клиент = make(Клиент)

func main() {
	Инфо("  %+v \n", " Запуск сервиса редактирования ")
	сервер := &СхемаСервера{
		Имя:   "SynQuic",
		Адрес: "localhost:4242",
		ДанныеСессии: ДанныеСессии{
			Блок:   &sync.RWMutex{},
			Потоки: []quic.Stream{},
		},
	}

	сообщениеРегистрации := Сообщение{
		Сервис:      Сервис,
		Регистрация: true,
		Маршруты: []Маршрут{"reg",
			"auth",
			"verify",
			"checkLogin",
			"code",
			"userAccess",
			"регистрация",
			"авторизация",
			"верификация",
			"идентификация",
			"праваДоступа",
			"проверитьЛогин",
			"проверитьКод",
			"проверитьEmail"},
	}

	клиент.Соединиться(сервер,
		сообщениеРегистрации,
		ОбработчикОтветаРегистрации,
		ОбработчикЗапросовСервера)
}
